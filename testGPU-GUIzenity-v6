#!/bin/bash
name=menutestGPU
confDir="/mining/.overclock"
logDir="/mining/.log"
conkym=".conky.msg"
Conky=$confDir/$conkym
tmpconf=".gpu.cfg"
TMPConf=$confDir/$tmpconf
log="testGPU.log"
GPUlog=$logDir/$log
time1=30
Uptime=$(awk '{print int($1/60)}' /proc/uptime)
inp=$1
NoCard=0 # Начальное количество не работающих карт
NoUtil=0 # Начальное количество не загруженных карт
avGPU=0  # Начальное значение средней загрузки видеокарт
host="google.com" # Хост, по которому проверяется наличие интернета
# Cчитываем количество видеокарт в системе
setGPU=$(lspci | grep NVIDIA | grep VGA | wc -l)
#=============== MSG Box =======================
title="Программа проверки работы видеокарт"
ititle="Info"
testGPUon="Проверка работы видекарт включена"
testGPUoff="Проверка работы видекарт отключена"
testOn="Включить проверку работы видеокарт"
testOff="Выключить проверку работы видеокарт"
handTest="Выполнить проверку работы видеокарт"
inetDown="Соединение с интернетом отсутствует"
noCard="Работают не все из $setGPU GPU, перезагрузка системы"
upnormUtil="В системе работают все $setGPU GPU"
reBoot="Не работает майнер, перезагрузка системы"
avrgUtil="Cредняя загрузка"
titleman="Управление скриптом проверки видеокарт"
tman="t - проверка работы видеокарт"
onman="on - включить проверку"
offman="off - выключить проверку"
cronman="cron - используется для включения скрипта через cron"
#===============================================
    # Проверяем наличие временного файла настроек проверки видеокарт
    # Если временного файла настроек нет, он будет создан и в него 
    # будет вписана переменная о включении проверки "on"
testConf() {
    if [ -f $TMPConf ] ; then
       true
    else : > $TMPConf ; echo "on" > $TMPConf
    fi
    if [ -f $Conky ] ; then
        true
    else : > $Conky
    fi }

    # Проверяем доступность интернета
TestInternet() {
    ping -c 4 -w 10 $host &>/dev/null
    inet=$?
    if [ $inet -ge 1 ] ; then 
    # Интернет не доступен, выходим из программы проверки загрузки видеокарт
        echo $inetDown > $Conky
        echo $(date +'%d-%m-%Y %T') $inetDown >> $GPUlog
        exit 0
    fi }

    # Считываем загрузку и мощность каждой видеокарты в системе
    # и делаем расчет среднего загрузки видеокарт
GPUUtiliz() {
    for (( i=0; i < $setGPU; i++))
    do  #Загрузка видеокарты
        uGPU=$(nvidia-smi --id=$i --query-gpu=utilization.gpu --format=csv | \
            awk 'BEGIN{FS="\n"; RS=""} {print $2}' | awk '{print $1}')
        #Мощность видеокарты
        pGPU=$(nvidia-smi --id=$i --query-gpu=power.draw --format=csv | \
            awk 'BEGIN{FS="\n"; RS=""} {print $2}' | awk '{print $1}')
    # Если какой-то видеокарты нет в системе, заменяем отсутствие данных 0
        if [ -z $uGPU ] ; then uGPU=0
        else uGPU=$uGPU
        fi
    # Если загрузка какой-то видеокарты равна 0, увеличиваем переменную $NoUtil на 1
        if [[ $uGPU -lt 1 ]] ; then let "NoUtil += 1"
        fi
    # Если мощности какой-то видеокарты нет в, увеличиваем переменную $NoCard на 1
        if [ -z $pGPU ] ; then let "NoCard += 1"
        fi
    # Суммируем все данные о загрузке видеокарт
        let "tGPU += $uGPU"
    done
    # Определяем среднюю загрузку видеокарт
    let "avGPU = $tGPU / $setGPU"
    tGPU=0 # Сбрасиваем данные о загрузки видеокарт
    echo $(date +'%d-%m-%Y %T') $avrgUtil $setGPU "GPU" $avGPU% >> $GPUlog
    echo $avrgUtil $setGPU "GPU" $avGPU% > $Conky
    if [ $setting = "testGPU" ] ; then
        zenity --info --title="$ititle" --text="$avrgUtil $setGPU "GPU" $avGPU%"\
         --timeout=3 --width=300 --height=100
    else
        echo $avrgUtil $setGPU "GPU" $avGPU%
    fi
}

    # Проверяем загрузку видеокарт и при необходимости перезагружаем 
    # систему
TestUtiliz() {
    GPUUtiliz
    if [[ $NoCard -gt 0 ]] ; then
       sleep $time1
       GPUUtiliz
        if [[ $NoCard -gt 0 ]] ; then
            echo $(date +'%d-%m-%Y %T') $noCard >> $GPUlog
            echo $noCard > $Conky
            if [ $setting = "testGPU" ] ; then
                zenity --info --title="$ititle" --text="$noCard"\
                --timeout=3 --width=300 --height=100
                sleep 4
            else
                echo $noCard
                sleep 4
            fi
            #sudo reboot
        else
            echo $(date +'%d-%m-%Y %T') $upnormUtil >> $GPUlog
            echo $upnormUtil > $Conky
            if [ $setting = "testGPU" ] ; then
                zenity --info --title="$ititle" --text="$upnormUtil"\
                --timeout=3 --width=300 --height=100
            else
                echo $upnormUtil
            fi
            exit 0
        fi
    else
        if [[ $NoUtil -gt 1 ]] ; then # Если карты в системе все, но загруюена только одна карта, 
                                      # не работает майнер перезагружаем систему
            echo $(date +'%d-%m-%Y %T') $reBoot >> $GPUlog
            echo $reBoot > $Conky
            if [ $setting = "testGPU" ] ; then
                zenity --info --title="$ititle" --text="$reBoot"\
                --timeout=3 --width=300 --height=100
                sleep 4
            else
                echo $reBoot
                sleep 4
            fi
            #sudo reboot
        else
            echo $(date +'%d-%m-%Y %T') $upnormUtil >> $GPUlog
            echo $upnormUtil > $Conky
            if [ $setting = "testGPU" ] ; then
                zenity --info --title="$ititle" --text="$upnormUtil"\
                --timeout=3 --width=300 --height=100
            else
                echo $upnormUtil
            fi
            exit 0
        fi
    fi 
    }

    # Основная функция управления скриптом проверки видеокарт
mainSet()
{   # Включаем проверку при ручном включении или через cron
    if [ $1 = "testGPU" -o $1 = "t" -o $1 = "cron" ] ; then
        testConf
        if [ $1 = "cron" ] ; then
            OnOff=$(cat $TMPConf)
            if [ $OnOff = "off" ] ; then 
                echo $testGPUoff > $Conky
                echo $(date +'%d-%m-%Y %T') "CRON" $testGPUoff >> $GPUlog
                exit 0 
            fi
        fi
        TestInternet
        TestUtiliz 
        fi
    # Записываем в временный файл переменную "on" для включения проверки
    if [ $1 = "testOn" -o $1 = "on" ] ; then
        echo $testGPUon > $Conky
        echo "on" > $TMPConf 
        echo $(date +'%d-%m-%Y %T') $testGPUon >> $GPUlog
        if [ $1 = "on" ] ; then
            echo $testGPUon
        else 
            zenity --info --title="$ititle" --text="$testGPUon"\
             --timeout=3 --width=300 --height=100
        fi
    fi
    # Записываем в временный файл переменную "off" для выключения проверки
    if [ $1 = "testOff" -o $1 = "off" ] ; then
        echo $(date +'%d-%m-%Y %T') $testGPUoff >> $GPUlog
        echo $testGPUoff > $Conky
        echo "off" > $TMPConf 
        if [ $1 = "off" ] ; then
            echo $testGPUoff
        else 
            zenity --info --title="$ititle" --text="$testGPUoff"\
             --timeout=3 --width=300 --height=100
        fi
    fi
    # Вывод справки по работе с программой
    if [ $1 = "man" ] ; then
        echo $titleman
        echo $tman
        echo $onman
        echo $offman
        echo $cronman 
    fi
}

    # GUI интерфейс управления программой
interface() {
    if [ -z $inp ] ; then
        OnOff=$(cat $TMPConf)
        if [ $OnOff = "on" ] ; then
            txt=$testGPUon
            setting=$(zenity --list --title="$title" --text="$txt" \
            --column="Команда" --column="Краткое описание" \
            --width=400 --height=200 \
            testGPU "$handTest" \
            testOff "$testOff")
        else txt=$testGPUoff
            setting=$(zenity --list --title="$title" --text="$txt" \
            --column="Команда" --column="Краткое описание" \
            --width=400 --height=200 \
            testGPU "$handTest" \
            testOn "$testOn")
        fi
    else setting=$inp
    fi }
interface
mainSet $setting
