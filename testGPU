#!/bin/bash
# ==========================================================================
# testGPU-v4
# Программа проверки работы видеокарт NVIDIA -V4
# Программа запускается в автоматическом режиме через cron с интервалом 1 минута. 
# Ее так же можно запустить вручную используя следующие параметры
# testGPU chk - проверка видеокарт
# testGPU on - включение проверки видеокарт с сохранением параметра во временном файле конфигурации
# testGPU off - выключение проверки видеокарт с сохраниение параметра во временном файле конфигурации
# testGPU man - показать эту справку
# Первые несколько минут, завист от установки переменно $delay программа в автоматическом 
# режиме не проверяет работу видеокарт, это связяно с тем, что некторые майнеры не 
# выводят загрузку видеокарт до 100% вразу после их включения, например такая работа 
# замечена за майнером Claymore. 
# При запуске программы без параметров, проиходит включение в интерактивном режиме
# при котором можно выбрать, что необходимо сделать, выполнить проверку, 
# включить или выключить проверку видеокарт в автоматическом режиме
# В ручном режиме проверка выполняется всегда!
# Если обнаружено, что какая-то видеокарта не работает, программа выполнит
# повторную проверку через 10 секунд, если работа карты не восстановилась
# окончательная проверка будет выполнена через следующие 20 секунд
# Если в течении этих последних 20 секунд работа карты не восстановилась
# система будет перезагружена
# Если программа обнаруживает, отсутствие интернета проверка работы видеокарт
# не выполняется
# Программа сделана ОЧЕНЬ говорящей, в log файл пишется очень много
# инфромации. Это позволяет анализировать работу видеокарт и при необходимости
# вносить изменения в настройки майнеров
# Не полностью проверенная информация. Замечено, что майнер CCMINER не на 100%
# загружает видеокарты, поэтому возможно что при работе этого майнера необходимо
# полностью выключить проверку видеокарт или же редактировать в функции minAvgGPU
# значения переменных $mAvGPU
# ===========================================================================
name=testGPU # Имя скрипта
# ==========================================================================
# Если не оспользуется файл с параметрами разгона видеокарт,
# необходимо закоментровать следующую строку и снять коментарий
# со строки следующей за ней
GPUConf="/opt/mining/gpu.cfg" # Где находится файл c параметрами разгона видеокарт
#setGPU=6
# ==========================================================================
host="google.com" # Хост, по которому проверяется наличие интернета
dir="/opt/mining" # Каталог для временного config файла
conf=".gpu.cfg" # Временный config файл в котором храниться параметр включена 
	        # или выключена проверка работы видеокарт
GPUlog="/opt/mining/.testGPU.log" # Log файл работы скрипта 
now=$(date +'%d-%m-%Y %T') # Формат даты
time1=10 # Время ожидания от обнаружения выпадания карты до повторной проверки
time2=20 # Время ожидания от повторной проверки до окончательной проверки состояния видеокарт
Uptime=$(awk '{print int($1/60)}' /proc/uptime) # Время работы системы
delay=4 # Время в течении которого после запуска системы не будет проверяться работа видеокарт
inp=$1 # Переменная для передачи введенного параметра в функции скрипта

# Проверка переданных параметров скрипту
checkOpt()
{
if [ -z $inp ] ; then
   inputRead
else
   input=$inp
   swcase
fi
}

# Проверка включена ли проверка работы видеокарт
OnOfftestGPU()
{
   OnOff=$(cat $dir/$conf)
   if [ $OnOff = "off" ] ; then
      echo -e "\e[1;31mПроверка работы видекарт отключена, выход из программы проверки\e[0m"
      echo $now "Проверка работы видекарт отключена, выход из программы проверки" >> $GPUlog
      exit 0
   fi
}

minAvgGPU()
{
# Считываем количество видеокарт с файла конфигурации
#setGPU=$(cat $GPUConf | jq '.GPU_Main[]' | sed 's/"/ /g' | \
#awk 'BEGIN{FS="\n"; RS=""} {print $1}')
# =========================================================
# Если не используется файл с параметрами разгона видекарт, 
# следующие две строки необходимо закоментировать
source $GPUConf
setGPU=$GPU_Number
# =========================================================
# Устанавливаем минимальную загрузку видеокарт в зависимости от кличества видеокарт в системе
if [ $setGPU -eq 10 ] ; then
   mAvGPU=90
fi
if [ $setGPU -eq 9 ] ; then
   mAvGPU=89
fi
if [ $setGPU -eq 8 ] ; then
   mAvGPU=88
fi
if [ $setGPU -eq 7 ] ; then
   mAvGPU=86
fi
if [ $setGPU -eq 6 ] ; then
   mAvGPU=84
fi
if [ $setGPU -eq 5 ] ; then
   mAvGPU=81
fi
if [ $setGPU -eq 4 ] ; then
   mAvGPU=76
fi
if [ $setGPU -eq 3 ] ; then
   mAvGPU=67
fi
if [ $setGPU -le 2 ] ; then
   mAvGPU=52
fi
}

GPUUtiliz()
{

# Считываем загрузку каждой видеокарты в системе
for (( i=0; i < $setGPU; i++))
do
uGPU=$(nvidia-smi --id=$i --query-gpu=utilization.gpu --format=csv | \
awk 'BEGIN{FS="\n"; RS=""} {print $2}' | awk '{print $1}')
# Если какой-то видеокарты нет в системе, заменяем отсутствие данных 0
if [ -z $uGPU ] ; then
    uGPU=0
else
    uGPU=$uGPU
fi
# Суммируем все данные о загрузке видеокарт
let "tGPU += $uGPU"
done
# Определяем среднюю загрузку видеокарт
avGPU=0
let "avGPU = $tGPU / $setGPU"
tGPU=0
echo "$now Средняя загрузка $setGPU GPU $avGPU%" >> $GPUlog
}

TestInternet()
{

# Проверяем доступность интернета
ping -c 4 -w 10 $host &>/dev/null
if [[ $? -eq 0 ]] ; then
# Интернет доступен, проверяем загрузку видеокарт
    minAvgGPU
    GPUUtiliz
else
# Интернет не доступен, выходим из программы проверки загрузки видеокарт
    echo "$now Соединение с интернетом отсутствует" >> $GPUlog
    exit 0
fi
}

TestUtiliz()
{
# Проверяем загрузку видеокарт
if [[ $avGPU -lt $mAvGPU ]] ; then
    sleep $time1
    minAvgGPU
    GPUUtiliz
    if [[ $avGPU -lt $mAvGPU ]] ; then
        echo "$now Загрузка $setGPU GPU очень низкая, повторная проверка..." >> $GPUlog
    else
        echo "$now Загрузка $setGPU GPU нормализовалась" >> $GPUlog
        exit 0
    fi
    sleep $time2
    minAvgGPU
    GPUUtiliz
    if [[ $avGPU -lt $mAvGPU ]] ; then
	echo "$now Перезагрузка системы" >> $GPUlog
	sudo reboot
    else
        echo "$now Загрузка $setGPU GPU нормализовалась" >> $GPUlog
        exit 0
    fi
else
    echo "$now Загрузка $setGPU GPU нормальная" >> $GPUlog
    exit 0
fi
}

# Выбор режима работы скрипта
swcase()
{
case $input in
1 | "chk" ) echo -e "\e[37mПроверка работы видеокарт\e[0m"
	echo $now "Проверка работы видеокарт" >> $GPUlog 
   	OnOfftestGPU
	TestInternet
	TestUtiliz ;; 
2 | "on") echo -e "\e[33mПроверка работы видеокарт включена\e[0m"
	echo $now "Проверка работы видеокарт включена" >> $GPUlog 
	echo "on" > $dir/$conf ;;
3 | "off") echo -e "\e[1;31mПроверка работы видеокарт выключена\e[0m"
	echo $now "Проверка работы видеокарт выключена" >> $GPUlog 
	echo "off" > $dir/$conf ;;
"man") echo -e "\e[37mДля управления программой проверки видеокарт:\e[0m"
	echo -e "\e[36mchk\e[0m - проверка видеокарт"
	echo -e "\e[36mon\e[0m - включение проверки видеокарт"
	echo -e "\e[36moff\e[0m - выключение проверки видеокарт"
	echo -e "\e[36mman\e[0m - показать эту справку" ;;
*) echo -e "\e[37mЗавершение работы программы\e[0m"
	echo $now "Завершение работы программы" >> $GPUlog ;;
esac
}

#  Приветствие работы скрипта и чтений введенных параметров с клавиатуры
inputRead()
{
   echo -e "\e[33mПрограмма проверки работы видеокарт\e[0m"
   OnOff=$(cat $dir/$conf) 
   if [ $OnOff = "on" ] ; then
      	echo -e "\e[35mПроверка работы видекарт включена\e[0m"
	echo -e "Продолжить проверку видеокарт: \e[1;35m1\e[0m"
   fi
   if [ $OnOff = "off" ] ; then
      	echo -e "\e[1;31mПроверка работы видекарт выключена\e[0m"
   fi
   echo -e "Включить проверку работы видеокарт: \e[1;35m2\e[0m"
   echo -e "Выключить проверку работы видеокарт: \e[1;35m3\e[0m" 
   echo -e "\e[37mЛюбая другая клавиша, завершение работы программы\e[0m"
   echo -e "\e[36mВаш выбор: \e[0m"; read input
swcase
}

# Проверяем наличие временного файла конфигурации
testConf()
{
    if [ -f $dir/$conf ] ; then
        echo #$now "Временный файл конфигурации имеется" >> $GPUlog
    else
#	echo $now "Временный файл конфигурации отсутствует, создаем его" >> $GPUlog
          : > $dir/$conf 
#	echo $now "Задаем настройки проверки работы карт" >> $GPUlog
          echo "on" > $dir/$conf
    fi
}

checkUpTime()
{
    if [ $Uptime -lt $delay ] ; then
    echo $now Система включена менее $delay минут >> $GPUlog   
    exit 0
    fi
}

mainfunction()
{
if [ -t 0 ] ; then
   echo $now "$name запущен вручную" >> $GPUlog
   testConf
   checkOpt
   sleep 1
   exit 0
else
   echo $now "$name запушен в cron" >> $GPUlog
   testConf
   checkUpTime
   OnOfftestGPU
   TestInternet
   TestUtiliz
   exit 0
fi
}

mainfunction
